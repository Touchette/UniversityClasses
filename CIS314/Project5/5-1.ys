init:	irmovl Stack, %esp  	# Set up stack pointer  
	irmovl Stack, %ebp  	    # Set up base pointer   
	call Main		            # Execute main program
	halt			            # Terminate program 

# Array of 4 elements
	.align 4 	
xp:	.long 0x0001
yp:	.long 0x0002

Main:	pushl %ebp 
	rrmovl %esp,%ebp
	irmovl yp,%eax	
	pushl %eax # push yp
	irmovl xp,%eax
	pushl %eax # push xp
	call Swap
	rrmovl %ebp,%esp
	popl %ebp
	ret 

# int Swap(int *xp, int *yp)
Swap:	pushl %ebp
	rrmovl %esp,%ebp
	pushl %ebx
	pushl %eax
	mrmovl 8(%ebp),%edx       # xp in %ecx
	mrmovl 12(%ebp),%ecx      # yp in %edx
	mrmovl (%edx), %ebx       # perform the swap for the next 4 lines
	mrmovl (%ecx), %eax       
	rmmovl %eax, (%edx)       
	rmmovl %ebx, (%ecx)        
	popl %ebp                 # pop the base pointer...
	ret                       # ...and return the value

# The stack starts here and grows to lower addresses
	.pos 0x100
Stack:
